def knapsack(items, capacity):
    n = len(items)
    dp = [[0] * (capacity + 1) for _ in range(n + 1)]
    for i in range(1, n + 1):
        weight, value = items[i - 1]
        for w in range(capacity + 1):
            if weight <= w:
                dp[i][w] = max(dp[i - 1][w], dp[i - 1][w - weight] + value)
            else:
                dp[i][w] = dp[i - 1][w]
    result = []
    w = capacity
    for i in range(n, 0, -1):
        if dp[i][w] != dp[i - 1][w]:
            result.append(items[i - 1])
            w -= items[i - 1][0]
    print("Items to include for maximum profit:")
    for item in result:
        print(f"Weight: {item[0]}, Value: {item[1]}")
    return dp[n][capacity]
items = [(2, 3), (4, 5), (5, 8), (3, 4)]  
capacity = 8
max_profit = knapsack(items, capacity)
print(f"Maximum profit: {max_profit}")
